name: CI/CD Pipeline

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to deploy'
        required: true
        default: 'latest'

# Valores fijos para el proyecto
env:
  PROJECT_ID: ${{ vars.PROJECT_ID }} 
  GKE_CLUSTER: ${{ vars.GKE_CLUSTER }}
  GKE_ZONE: ${{ vars.GKE_ZONE }}
  IMAGE: ${{ vars.IMAGE }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.19'
        
    - name: Test
      run: go test -v ./...

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      
    - name: Login to GCR
      uses: docker/login-action@v1
      with:
        registry: gcr.io
        username: _json_key
        password: ${{ secrets.GCP_SA_KEY }}
        
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: |
          gcr.io/${{ env.PROJECT_ID }}/${{ env.IMAGE }}:${{ github.sha }}
          gcr.io/${{ env.PROJECT_ID }}/${{ env.IMAGE }}:latest

  deploy-dev:
    needs: build
    if: github.ref != 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: development
    steps:
    - uses: actions/checkout@v2
    
    - uses: google-github-actions/get-gke-credentials@v0.2.1
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
        credentials: ${{ secrets.GCP_SA_KEY }}
        
    - name: Create K8s Secrets
      run: |
        kubectl create secret generic db-credentials \
          --from-literal=host=${{ secrets.DB_HOST }} \
          --from-literal=dbname=${{ secrets.DB_NAME }} \
          --from-literal=username=${{ secrets.DB_USERNAME }} \
          --from-literal=password=${{ secrets.DB_PASSWORD }} \
          --from-literal=port=${{ secrets.DB_PORT }} \
          --dry-run=client -o yaml | kubectl apply -f -
      
    - name: Deploy to Dev
      run: |
        kubectl apply -f .k8s/
        kubectl set image deployment/micasino-api api=gcr.io/$PROJECT_ID/$IMAGE:${{ github.sha }}

  deploy-prod:
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: production
    steps:
    - uses: actions/checkout@v2
    
    - uses: google-github-actions/get-gke-credentials@v0.2.1
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
        credentials: ${{ secrets.GCP_SA_KEY }}
        
    - name: Deploy to Prod
      run: |
        kubectl apply -f .k8s/
        kubectl set image deployment/micasino-api api=gcr.io/$PROJECT_ID/$IMAGE:${{ github.sha }} 